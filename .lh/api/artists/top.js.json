{
    "sourceFile": "api/artists/top.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1757515938476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757516106211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   const { id } = req.query;\r\n   if (!id) return res.status(400).json({ error: 'Missing id param' });\r\n   try {\r\n     const data = await fetchFromJioSaavn('/artists/top', { id });\r\n-    const results = (data.data?.results || data.results || []).map(simplifySong);\r\n+    const results = (data.data?.results || data.results || []).map(simplifySong).filter(Boolean);\r\n     res.json({ results });\r\n   } catch (e) {\r\n     res.status(500).json({ error: e.message });\r\n   }\r\n"
                }
            ],
            "date": 1757515938476,
            "name": "Commit-0",
            "content": "// /api/artists/top\r\nimport { fetchFromJioSaavn } from '../utils/fetcher.js';\r\n\r\nfunction simplifySong(song) {\r\n  return {\r\n    id: song.id || song._id,\r\n    title: song.name || song.title,\r\n    artists: song.artists?.primary?.map(a => a.name).join(', ') || song.primaryArtists,\r\n    album: song.album?.name || song.album_name || song.album,\r\n    year: parseInt(song.year) || parseInt(song.releaseDate?.slice(0, 4)) || null,\r\n    duration: parseInt(song.duration) || null,\r\n    language: song.language,\r\n    playCount: parseInt(song.playCount) || 0,\r\n    url: song.url,\r\n    image: Array.isArray(song.image) ? (song.image.find(i => i.quality === '500x500')?.url || song.image[0]?.url) : song.image,\r\n    downloadUrl: song.downloadUrl || []\r\n  };\r\n}\r\n\r\nexport default async function handler(req, res) {\r\n  const { id } = req.query;\r\n  if (!id) return res.status(400).json({ error: 'Missing id param' });\r\n  try {\r\n    const data = await fetchFromJioSaavn('/artists/top', { id });\r\n    const results = (data.data?.results || data.results || []).map(simplifySong);\r\n    res.json({ results });\r\n  } catch (e) {\r\n    res.status(500).json({ error: e.message });\r\n  }\r\n}\r\n"
        }
    ]
}