{
    "sourceFile": "api/albums/search.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1757515996266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757516106234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n       query, \r\n       page: 0,\r\n       limit: limit \r\n     });\r\n-    const results = (data.data?.results || data.results || []).map(album => simplifyAlbum(album));\r\n+    const results = (data.data?.results || data.results || []).map(album => simplifyAlbum(album)).filter(Boolean);\r\n     res.json({ results });\r\n   } catch (e) {\r\n     res.status(500).json({ error: e.message });\r\n   }\r\n"
                }
            ],
            "date": 1757515996266,
            "name": "Commit-0",
            "content": "// /api/albums/search\r\nimport { fetchFromJioSaavn } from '../utils/fetcher.js';\r\n\r\nexport default async function handler(req, res) {\r\n  const { query, limit = 30 } = req.query;\r\n  if (!query) return res.status(400).json({ error: 'Missing query param' });\r\n  try {\r\n    const data = await fetchFromJioSaavn('/search/albums', { \r\n      query, \r\n      page: 0,\r\n      limit: limit \r\n    });\r\n    const results = (data.data?.results || data.results || []).map(album => simplifyAlbum(album));\r\n    res.json({ results });\r\n  } catch (e) {\r\n    res.status(500).json({ error: e.message });\r\n  }\r\n}\r\n\r\nfunction simplifyAlbum(album) {\r\n  return {\r\n    id: album.id,\r\n    title: album.name || album.title,\r\n    artists: album.artists?.primary?.map(a => a.name).join(', ') || album.primaryArtists,\r\n    year: parseInt(album.year) || null,\r\n    language: album.language,\r\n    playCount: parseInt(album.playCount) || 0,\r\n    url: album.url,\r\n    image: Array.isArray(album.image) ? (album.image.find(i => i.quality === '500x500')?.url || album.image[0]?.url) : album.image\r\n  };\r\n}\r\n"
        }
    ]
}